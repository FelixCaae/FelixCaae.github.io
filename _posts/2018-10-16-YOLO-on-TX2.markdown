---
layout: post
title:  "Quickstart:Install and run YOLOv3 on TX2"
date:   2018-10-16 12:54:11 +0800
categories: jekyll update
---
YOLO is a fast CNN model which make real-time Object Detection possible.It is the first single-stage detector.Though there are a lot of better successors like SSD series yolov3 is still competent today.So it would be a good start to run and see how yolo work if you are new to this area.<br>

See it`s official site [here](https://pjreddie.com/darknet/yolo/) 
To run YOLO on TX2, there are some simple steps to follow.<br>

0. #### Preinstall <br>
    + JetPack 3.1 or later is required.Or you should at least installed cuda.<br>
    + Enable full mode of TX2.
        
        sudo nvpmodel -m 0
        sudo ~\jetson_clocks.sh

    *If you have done this before you can jump this step*<br>
    
1. #### Clone the repo
    
        git clone https://github.com/pjreddie/darknet
        cd darknet

2. #### Modify makefile<br>
    Firstly open the file.You can use gedit also
  
        vim Makefile

    Or
    
        gedit Makefile        

    Use # to comment original settings and add new lines aside.
   
        #GPU = 0
        #CUDNN = 0
        #... 
    
        GPU = 1
        CUDNN = 1
        OPENCV = 1
        ARCH = -gencode arch=compute_62,code=compute_62
    
    If you want to test it without `GPU`、`CUDNN`、`OPENCV` just leave those lines alone.`OPENCV` is used to
    show result immediately after the command.Otherwise you may need to manually open the prediction.jpg to see.`CUDNN`
    
3. #### Make

        make -j6
        
    This will take serveral minutes.
    You are almost successed!

4. #### Now get weights
    From official site 
        
        wget https://pjreddie.com/media/files/yolov3.weights
    
    Or from [Baiduyun Driver](https://pan.baidu.com/s/1ZxJgjWrq7RCaGif8NvVrJg)(Fast in China)


Now all your preparation work are **done**.Good job!Here are some instructions to let your YOLO work for you.

1. #### Image Detection

        ./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg
     
     You should see something like this(from offical site which is NOT run on TX2).

        layer     filters    size              input                output
          0 conv     32  3 x 3 / 1   416 x 416 x   3   ->   416 x 416 x  32  0.299 BFLOPs
          1 conv     64  3 x 3 / 2   416 x 416 x  32   ->   208 x 208 x  64  1.595 BFLOPs
          .......
        105 conv    255  1 x 1 / 1    52 x  52 x 256   ->    52 x  52 x 255  0.353 BFLOPs
        106 detection
        truth_thresh: Using default '1.000000'
        Loading weights from yolov3.weights...Done!
        data/dog.jpg: Predicted in 0.029329 seconds.
        dog: 99%
        truck: 93%
        bicycle: 99%

    + If you have used `OPENCV = 1` ,then you should see the pictrue.If you don\`t use opencv,
    open the 'prediction.jpg' from the project dir.<br>
    ![image](https://pjreddie.com/media/image/Screen_Shot_2018-03-24_at_10.48.42_PM.png)
    
    + The time consume should between 0.1s and 0.4s if you have used `GPU = 1`.If you see a number
    more than 1, maybe you are not using `GPU`.
    + 

2. #### Video Detection
    
        ./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights video.mp4
    *By now I have only used .mp4 format video file.*
    It should run at 2-4 fps if you have used GPU = 1.
3. #### Onboard Camera 
    
        ./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights "nvcamerasrc ! video/x-raw(memory:NVMM), width=(int)1280, height=(int)720,format=(string)I420, framerate=(fraction)30/1 ! nvvidconv flip-method=0 ! video/x-raw, format=(string)BGRx ! videoconvert ! video/x-raw, format=(string)BGR ! appsink"
4. #### Plug-in Camera
    
    I haven`t tested it in reality.But it may work for you.

        ./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights -c 1

Hope everything is OK for you!

### Further reading
1. #### How to use tiny models<br>
  
  
    It\`s simple.Replace all yolov3 with yolov3-tiny in those instructions.
2. #### It\`s so slow!<br>
  
  
    There is a good idea to improve this situaiton: modify input size.
        
        vim cfg/yolov3.cfg

    Set width and height smaller.Try 256, 320, 384 and so on. But this will decrease it\`s accuracy of course.My experience 
    is 256 is still a good choice.But the smaller ones would be too bad. 

3. #### How to train and evaluate models?


    There is a good repo by [AlexyAB](https://github.com/AlexeyAB/darknet).He can help you in this topic a lot.Usually you need to prepare the dataset, mark it, make the label file and use `./darknet train xxx`

   
### Links 
1. This blog give me a lot of help.[**JK Jung\`s blog**](https://jkjung-avt.github.io/) 
2. The offical site.[**Darknet**](https://pjreddie.com)
3. 一篇[中文博客](https://blog.csdn.net/dhaduce/article/details/80379792)，写得很好.

